// Colors
$hardwood_text: rgba(102, 51, 0, 1);
$jill_orange_off: rgba(102, 0, 0, .75);
$jill_orange: rgba(153, 51, 0, 1);
$kemono_brown: rgba(137, 57, 13, 1);
$kona_red_off: rgba(102, 0, 0, .75);
$kona_red: rgba(204, 0, 51, 1);
$label_peach: rgba(205, 126, 83, 1);
$maxine_green_off: rgba(0, 102, 0, .75);
$maxine_green: rgba(51, 153, 51, 1);
$miko_blue_off: rgba(0, 51, 102, .75);
$miko_blue: rgba(51, 102, 153, 1);
$reader_white: rgba(226, 208, 199, 1);
$off_white: rgba(250, 250, 250, 1);
$off_black: rgba(10, 10, 10, 1);
$sandy_peach_off: rgba(153, 51, 0, .75);
$sandy_peach: rgba(204, 102, 102, 1);
$shadow_black: rgba(34, 34, 34, 1);
$steve_paste: rgba(244, 244, 244, 1);

// Constants
$default-border-radius: 5px;
$default-margin: 10px;
$default-padding: 10px;
$project-max-width: 1280px;
$breakpoints: (
  'md':  ( min-width:  767px ),
  'lg': ( min-width:  992px ),
  'xl':  ( min-width: 1200px )
) !default;

// Mixins
// https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin image-link() {
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  color: transparent;
  display: block;
}
